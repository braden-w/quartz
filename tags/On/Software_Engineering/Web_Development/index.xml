<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>On/Software_Engineering/Web_Development on</title><link>https://braden-w.github.io/quartz/tags/On/Software_Engineering/Web_Development/</link><description>Recent content in On/Software_Engineering/Web_Development on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://braden-w.github.io/quartz/tags/On/Software_Engineering/Web_Development/index.xml" rel="self" type="application/rss+xml"/><item><title>React Sucks</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/React-Sucks/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/React-Sucks/</guid><description>React Sucks Documentation is still on class based components Not typescript There is a native way to set a variable in Javscript, and React completely sidesteps this Forces immutability Instead of .</description></item><item><title>Order of Requests in [[Next.js]] Versus [[Remix]]</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Clippings/Order-of-Requests-in-Next.js-Versus-Remix/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Clippings/Order-of-Requests-in-Next.js-Versus-Remix/</guid><description>Order of Requests in [[Next.js]] Versus [[Remix]] GetServerSide Props is on the same file, but it&amp;rsquo;s really far away from the function that consumes it</description></item><item><title>Remix Handles Initial and Transition Page Data</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Remix-handles-initial-and-transition-page-data/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Remix-handles-initial-and-transition-page-data/</guid><description>Remix Handles Initial and Transition Page Data References (References:: undefined)</description></item><item><title>[[Material UI]] Is Bloated and Won't Get You Far</title><link>https://braden-w.github.io/quartz/obsidian/Material-UI-Is-Bloated-and-Wont-Get-You-Far/</link><pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Material-UI-Is-Bloated-and-Wont-Get-You-Far/</guid><description>[[Material UI]] Is Bloated and Won&amp;rsquo;t Get You Far</description></item><item><title>CSS, Behavior Libraries, and Style Systems</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/CSS-Behavior-Libraries-and-Style-Systems/</link><pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/CSS-Behavior-Libraries-and-Style-Systems/</guid><description>CSS, Behavior Libraries, and Style Systems [[Tailwind CSS]] is a CSS library, but people expect it to be a style system and are too used to working with &amp;ldquo;componentt libraries&amp;rdquo;.</description></item><item><title>THEO'S DEV ENVIRONMENT, MUI RANT, STORY POINTS AND EMO OVER DONATIONS - STREAM VOD - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Clippings/THEOS-DEV-ENVIRONMENT-MUI-RANT-STORY-POINTS-AND-EMO-OVER-DONATIONS-STREAM-VOD-YouTube/</link><pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Clippings/THEOS-DEV-ENVIRONMENT-MUI-RANT-STORY-POINTS-AND-EMO-OVER-DONATIONS-STREAM-VOD-YouTube/</guid><description>THEO&amp;rsquo;S DEV ENVIRONMENT, MUI RANT, STORY POINTS AND EMO OVER DONATIONS - STREAM VOD - YouTube [[CSS, Behavior Libraries, and Style Systems]]</description></item><item><title>Frontend, Backend, and Full Stack</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Frontend-Backend-and-Full-Stack/</link><pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Frontend-Backend-and-Full-Stack/</guid><description>Frontend, Backend, and Full Stack</description></item><item><title>When to Use Web Technologies</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/When-to-Use-Web-Technologies/</link><pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/When-to-Use-Web-Technologies/</guid><description>When to Use Web Technologies If Not Interactive, Consider [[Static Site Generation]] Best for handling markdown and templates If Not, Consider [[JAMStack]] and [[Server Side Rendering|SSR]]</description></item><item><title>Test Driven Development (TDD) Sucks</title><link>https://braden-w.github.io/quartz/obsidian/Test-Driven-Development-TDD-Sucks/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Test-Driven-Development-TDD-Sucks/</guid><description>Test Driven Development (TDD) Sucks [[Test Driven Development (TDD)]] Sucks. Use User Driven Development (UDD) instead.
See [[Typescript Handles Most of Unit Testing]]</description></item><item><title>Why You Shouldn't Unit Test</title><link>https://braden-w.github.io/quartz/obsidian/Why-You-Shouldnt-Unit-Test/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Why-You-Shouldnt-Unit-Test/</guid><description>Why You Shouldn&amp;rsquo;t Unit Test [[Test Driven Development (TDD) Sucks]] [[Typescript Handles Most of Unit Testing]] References (References:: YOU DONT UNIT TEST?</description></item><item><title>Always Check for the Hidden API When Web Scraping - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Always-Check-for-the-Hidden-API-When-Web-Scraping-YouTube/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Always-Check-for-the-Hidden-API-When-Web-Scraping-YouTube/</guid><description>Always Check for the Hidden [[API]] When Web Scraping - YouTube Look under XHR Copy request as CURL Modify as desired References (References:: Always Check for the Hidden API when Web Scraping - YouTube)</description></item><item><title>The User Facing Software Spectrum ([[React]] versus [[React Native]] versus [[NextJS]] versus [[Remix]] versus [[Astro]])</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/The-User-Facing-Software-Spectrum-React-Versus-React-Native-Versus-NextJS-Versus-Remix-Versus-Astro/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/The-User-Facing-Software-Spectrum-React-Versus-React-Native-Versus-NextJS-Versus-Remix-Versus-Astro/</guid><description>The User Facing Software Spectrum ([[React]] Versus [[React Native]] Versus [[NextJS]] Versus [[Remix]] Versus [[Astro]])</description></item><item><title>[[Angular]] Is BAD but I Understand Why You Like it - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Angular-Is-BAD-but-I-Understand-Why-You-Like-it-YouTube/</link><pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Angular-Is-BAD-but-I-Understand-Why-You-Like-it-YouTube/</guid><description>[[Angular]] Is BAD but I Understand Why You Like it - YouTube [[React]] solves one problem: make state reactive and make it show up in UI.</description></item><item><title>Edge Functions</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Edge-Functions/</link><pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Edge-Functions/</guid><description>Edge Functions Super fast hosting code closer to users. By limiting the number of things we can do to mostly JS, we can reduce cold start time.</description></item><item><title>Modern Web "Points of Innovation"</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Modern-Web-Points-of-Innovation/</link><pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Modern-Web-Points-of-Innovation/</guid><description>Modern Web &amp;ldquo;Points of Innovation&amp;rdquo; Deployment Methods Severless Containers &amp;ldquo;Edge&amp;rdquo; Containers [[Edge Functions|Edge Runtimes]] (hype) [[Edge Functions]] Web Frameworks [[NextJS]] Remix Svelte Astro Quik Data Storage Postgres/MySQL Caches Edge Storage In [[Serverless]], a new server is often created and destroyed on every request.</description></item><item><title>Why [[Flutter]] is Worse Than [[React Native]] (Code Push)</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Why-Flutter-is-Worse-Than-React-Native-Code-Push/</link><pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Why-Flutter-is-Worse-Than-React-Native-Code-Push/</guid><description>Why [[Flutter]] is Worse Than [[React Native]] (Code Push) Code Push The ability to push changes to app without app store review.</description></item><item><title>You Don't Need Storybook</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/You-Dont-Need-Storybook/</link><pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/You-Dont-Need-Storybook/</guid><description>You Don&amp;rsquo;t Need Storybook It&amp;rsquo;s not a solution to UI Testing. It&amp;rsquo;s a solution to UI Libraries.
References (References:: https://youtube.</description></item><item><title>You Might Be Using Typescript Wrongâ€¦ - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/You-Might-Be-Using-Typescript-Wrong-YouTube/</link><pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/You-Might-Be-Using-Typescript-Wrong-YouTube/</guid><description>You Might Be Using Typescript Wrongâ€¦ - YouTube Type Inference Versus Explicit Don&amp;rsquo;t be explicit in all of your typing Use types to define the input and output of functions.</description></item><item><title>Do You REALLY Need GraphQL? How to Decide Between tRPC and GQL - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Do-You-REALLY-Need-GraphQL-How-to-Decide-Between-tRPC-and-GQL-YouTube/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Do-You-REALLY-Need-GraphQL-How-to-Decide-Between-tRPC-and-GQL-YouTube/</guid><description>Do You REALLY Need GraphQL? How to Decide Between tRPC and GQL - YouTube You often want a [[GraphQL]] god to make sure [[GraphQL]] [[API]] is good Many companies do GraphQL wrong It&amp;rsquo;s very easy to do bad See the GitHub GraphQL API [[GraphQL]] is [[REST]] with extra steps [[tRPC]] is the barebones Start with [[REST]], then ask yourself if you need more complex for [[GraphQL]] or more barebones [[tRPC]] [[tRPC]] works better in a [[Monorepo]] References (References:: Do You REALLY Need GraphQL?</description></item><item><title>NEW FRAMEWORK Makes Remix And NextJS Feel Slow?? Fresh by Deno is FAST - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/NEW-FRAMEWORK-Makes-Remix-And-NextJS-Feel-Slow-Fresh-by-Deno-is-FAST-YouTube/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/NEW-FRAMEWORK-Makes-Remix-And-NextJS-Feel-Slow-Fresh-by-Deno-is-FAST-YouTube/</guid><description>NEW FRAMEWORK Makes Remix And NextJS Feel Slow?? Fresh by Deno is FAST - YouTube [[Server Side Rendering|SSR]] Versus [[Static Site Generation|SSG]] Versus Fresh References (References:: NEW FRAMEWORK Makes Remix And NextJS Feel Slow?</description></item><item><title>Perfect Code is BAD - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Perfect-Code-is-BAD-YouTube/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Perfect-Code-is-BAD-YouTube/</guid><description>Perfect Code is BAD - YouTube Implies that you spent too much time on the thing [[Your Job is to Deliver to Customers, not to Engineers]] Often a business expense Better to have serviceable code that you can replace easily Good code is cheap Perfect code is insanely expensive References (References:: Perfect code is BAD - YouTube)</description></item><item><title>CSS Absolute Vs Relative Position EXPLAINED! - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/CSS-Absolute-Vs-Relative-Position-EXPLAINED-YouTube/</link><pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/CSS-Absolute-Vs-Relative-Position-EXPLAINED-YouTube/</guid><description>CSS Absolute Vs Relative Position EXPLAINED! - YouTube Absolute Positioned relative to closest positioned ancestor. Requires coordinates. Removed from document flow.</description></item><item><title>CSS Positioning Tutorial - Relative Vs. Absolute Vs. Fixed Vs. Sticky - Crash Course - YouTube</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/CSS-Positioning-Tutorial-Relative-Vs.-Absolute-Vs.-Fixed-Vs.-Sticky-Crash-Course-YouTube/</link><pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/CSS-Positioning-Tutorial-Relative-Vs.-Absolute-Vs.-Fixed-Vs.-Sticky-Crash-Course-YouTube/</guid><description>CSS Positioning Tutorial - Relative Vs. Absolute Vs. Fixed Vs. Sticky - Crash Course - YouTube Inline versus Block Positioning Fixed Positioning Removed from Document Flow See [[CSS Absolute Vs Relative Position EXPLAINED!</description></item><item><title>Huge Amounts of Bloat</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Modern-web-bloat/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Modern-web-bloat/</guid><description>Modern web bloat References (References:: A Demonstration of Modern Web Bloat)</description></item><item><title>Web Development Sucks</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Journal/Personal-Life/Web-Development-Sucks/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Journal/Personal-Life/Web-Development-Sucks/</guid><description>Web Development Sucks Early web was optimized for documents, and we have been hacking ever since to expand it to get things to work We&amp;rsquo;ve expanded the Document User Interface so much that we are limited by its initial principles We&amp;rsquo;re trying to do a bunch of things that are not document like with a document Like [[Fitting a peg in a square hole]] [[Modern web bloat]] References (References:: Flutter vs.</description></item><item><title/><link>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Why-I-Use-NextJS-For-ALL-My-Backends-YouTube/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Videos/Why-I-Use-NextJS-For-ALL-My-Backends-YouTube/</guid><description>Why I Use NextJS For ALL My Backends - YouTube Stop Using Express in [[NextJS]] [[NextJS]] is a [[Backend]] that turns Express functions into serverless functions References (References:: Why I Use NextJS For ALL My Backends - YouTube)</description></item></channel></rss>