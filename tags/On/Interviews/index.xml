<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>On/Interviews on</title><link>https://braden-w.github.io/quartz/tags/On/Interviews/</link><description>Recent content in On/Interviews on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://braden-w.github.io/quartz/tags/On/Interviews/index.xml" rel="self" type="application/rss+xml"/><item><title>Exponent Mock Interviews</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Exponent-Mock-Interviews/</link><pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Exponent-Mock-Interviews/</guid><description>Exponent Mock Interviews References (References:: Onboarding - Exponent)</description></item><item><title>Use Sustained Questioning</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Use-Sustained-Questioning/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Use-Sustained-Questioning/</guid><description>Use Sustained Questioning References (References:: undefined)</description></item><item><title>Get the Person in Conversation Mood</title><link>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Get-the-Person-in-Conversation-Mood/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Cards/Fleeting-Notes/Get-the-Person-in-Conversation-Mood/</guid><description>Get the Person in Conversation Mood</description></item><item><title>Elements of Programming Interviews</title><link>https://braden-w.github.io/quartz/obsidian/Sources/Books/Elements-of-Programming-Interviews/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://braden-w.github.io/quartz/obsidian/Sources/Books/Elements-of-Programming-Interviews/</guid><description>Elements of Programming Interviews Arrays Use the array itself to reduce space complexity to O(1). Filling an array from back if possible (avoids shifting) Instead of deleting an entry (which requires moving all entries to its right), consider overwriting When dealing with numbers represented as an array, process from back to front or reverse array Write code that operates on subarrays.</description></item></channel></rss>